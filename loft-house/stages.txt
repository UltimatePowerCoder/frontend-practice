Этапы работы над проектом.
Так как до этого я верстал без использования препроцессоров, сделал подробный конспект.

1.  Создана структура фалйлов и папок.
    Так как используем SCSS, в корне проекта cоздана папка SCSS.
    Внутри SCSS были созданы папки base и blocks и файл main.scss
    
    В папку base помещены файлы:
        _base.scss - Для основных стилей.
        _reset.scss - Для сброса стандартных стилей.
        _vars.scss - Для переменных.
    
    Папка blocks временно пустует. (Потом туда будем добавлять файлы со стилями секций)

    Внури файла main.scss импротировали файлы:
    
    // Base
    @import './base/reset';
    @import './base/vars';
    @import './base/base';

    Важно соблюдать правильную последовательность в подключении файлов scss!

2. Подключение шрифтов:
    Смотрим в макете какие шрифты используются.
    Для Фигмы - плагин font fascia.
    Для логотипа шрифт не подключаем - загрузим как картинку при нарезке.

    Шрифты ищем в Google Fonts:
    @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Raleway:wght@400;700&family=Roboto:wght@300&display=swap');

    CSS правила для шрифтов там же берем:
    font-family: 'Playfair Display', serif;
    font-family: 'Raleway', sans-serif;
    font-family: 'Roboto', sans-serif;

    Шрифты подключаем внутри файла _base.scss
    Далее смотрим есть ли шрифт который является базовым для текста и используется чаще всего.
    В нашем случае это Raleway - его мы укажем внутри тега body - font-family: 'Raleway', sans-serif;
    После этого заведем этот шрифт в переменную - внутри файла _vars.scss:
        В нём создаем комментарий //Fonts - и пишем переменные с шрифтами которые использовали.
        
        // Fonts
        $font-main: 'Raleway', sans-serif;
        $font-accent: 'Playfair Display', serif;
        $font-secondary: 'Roboto', sans-serif;

    Теперь можно для тега body задать переменную с шрифтом Raleway.

3. Распределение цветов макета по переменным.
    Аналогично, в файле _vars.scss создаем комментарий //Colors.
    И смотрим в макете какие основные цвета будут использоваться на странице.
    В фигме можно кликнуть на название, которое находится в верхнем левом углу фрейма.
    Далее мы увидим используемые цвета и сможем их забрать через inspect или dev tools.
    
    //Colors
    $dark: #242B33;
    $accent: #D4C17F;
    $white: #fff;
    $footer-bg: #2D343C;

4. Добавляем базовые стили для страницы:
    Внутри _base.scss пишем цвет фона, цвет текста, цвет ссылок.
    
    body {
        font-family: $font-main;
        background-color: $dark;
        color: $white;
        font-size: 16px;
    }

    a {
        color: $white;
        transition: color 0.2s ease-in;
    
        &:hover{
            color: $accent;
        }
    }

5. Верстка макета:

    NB! Рекомендуется располагать свойства в следующем порядке:

        Первым делом пишем свойства: display, justify...

        Далее положение элемента относительно других: 
        position, left/right/top/bottom, float, clear, z-index.
        
        Затем размеры и отступы: 
        width, height, margin, padding…
        
        Рамка border, она частично относится к размерам.
        
        Общее оформление содержимого: 
        list-style-type, overflow…
        
        Цветовое и стилевое оформление: 
        background, color, font…

    5.1 Шапка сайта:
        Сохраняем всю графику необходимую для размещения в шапке:

            - Логотип;
            - Фоновое изображение:
            - Пин от карты;
            - Значок трубки;
            - Значок с мышкой;
            
        Часть изображений используемых только в header сохраняем
        в папку img/header, общие для страницы в img/

        Создаем тег header и прописываем его стили в blocks/_header.scss
        Не забываем подключить его в main.scss

        Далее сама верстка:
        - Смотрим в макете высоту шапки - 840px. Следовательно min-height: 840px;
        - Добавляем градиент на фоновое изображение из фигмы:
            background: linear-gradient(180deg, #242B33 11.98%, rgba(45, 52, 60, 0.38) 51.04%, #242B33 92.19%), url(<path-to-image>), lightgray 50% / cover no-repeat;
        
        NB! При указании пути до картинки, важно помнить что путь мы пишем относительно .css файла, а не .scss !!!
        Поэтому путь будет такой: url(./../img/header/header-bg.jpg).

        Далее создаем контейнер ограничивающий размер блока по ширине и размещаем его по центру:
        - Ширину смотрим в макете. В нашем случае она - 1110px.
            
            Поэтому создаем div с классом container и стилизуем его в _base:
            .container {
               width: 1140px; - Из за того что указали box-sizing: border-box;
               padding: 0px 15px; - Что бы не прилипал контент к краям браузера.
               margin: 0 auto; - Ствим контейнер по центру. 
            }

        Посмотрим на блок:
        Логотип и Меню - в верху элемента - <div class="header__top"></div>
        Заголовок - по центру элемента - <div class="header__title"></div>
        Адрес и номер телефона - в нижней части элемента - <div class="header__bottom"></div>

        Стили будем писать в _header.scss
        И начнем со стилей для тега header, внутри которого у нас находятся контейнеры, которые
        мы только что создавали выше.

        <header class="header">
        <div class="header__top">
            <div class="container">
                <div class="header__top-row">
                    <a href="#">
                        <img src="./img/logo.svg" alt="Loft House">
                    </a>
                    <div class="header__nav">
                        <nav class="nav">
                            <ul class="nav__list">
                                <li><a href="#">О комплексе</a></li>
                                <li><a href="#">Район</a></li>
                                <li><a href="#">Каталог квартир</a></li>
                                <li><a href="#">Ипотека</a></li>
                                <li><a href="#">Контакты</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div class="header__title">
            <div class="container">Центральный заголовок</div>
        </div>
        <div class="header__bottom">
            <div class="container">Телефон и контакты</div>
        </div>
        </header>


        Стили:
        .header {
            display: flex;
            flex-direction: column;
            justify-content: space-between;

            padding-top: 30px;
            padding-bottom: 74px;

            min-height: 840px;

            background: 
            linear-gradient(
                180deg,
                #242B33 11.98%,
                rgba(45, 52, 60, 0.38) 51.04%,
                #242B33 92.19%
            ),
            url(./../img/header/header-bg.jpg), lightgray 50% / cover no-repeat;
        }

        .header__top-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        Для навигации создаем отдельный файл _nav.scss и не забываем его подключить в main.scss:
        @import './blocks/nav';

        Внутри _nav.scss пишем стили для навигации:
        
        .nav {
            font-size: 14px;
        }

        .nav__list {
            display: flex;
            flex-direction: row;
            column-gap: 40px;
        }

        К этому меню еще придется вернуться во время адаптации. А пока идем дальше.
        И следующий у нас Заголовок и низ блока с контактами:

        <div class="header__title container">
                <h1 class="header__desc">Жилой комплекс <br> в историческом центре</h1>
                <a href="#benefits"><img class="header__icon" src="./img/header/mouse.svg" alt="Scroll next"></a>
        </div>

        <div class="header__bottom">
                <div class="container">
                    <div class="header__contacts">
                        <div class="header__adress"><a href="#link-to-map">Наб. реки Фонтанки 10-15</a></div>
                        <div class="header__phone"><a href="tel:+78121234567">8 (812) 123-45-67</a></div>
                    </div>
                </div>
        </div>

        В стилях:

        .header__title{
            position: relative;
            margin-bottom: 320px;
        }

        .header__desc {
            text-align: center;
            font-family: $font-accent;
            font-size: 48px;
            font-weight: 700;
            color: $accent;
        }

        .header__icon{
            position: absolute;
            right: 47%;
            bottom: -110px;

            cursor: pointer;
        }

        .header__contacts {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            width: 625px;
            margin: 0 auto;

        }

        .header__adress,
        .header__phone {
            position: relative;
            padding-left: 35px;
        }

        .header__phone {
            padding-right: 90px;
        }

        .header__adress::before,
        .header__phone::before {
            content: "";
            position: absolute;
            left: 0;
            top: 0;
            width: 21px;
            height: 21px;
            background-repeat: no-repeat;
        }

        .header__adress::before{
            background-image: url(./../img/header/map.svg);
        }

        .header__phone::before {
            background-image: url(./../img/header/phone.svg);
        }

        На этом заканчиваем верстку шапки.

    5.2 Создаем тег main для основного контента, в него кладём <section class="benefits">
        (Помним, что каждый тег section должен иметь какой либо заголовок можно указать и 
        визуально скрыть его, чтобы на проверке семантики небыло warning-ов)

        Но чтобы его не видели пользователи, так как его нет в дизайне, используем класс:
        
        .visually-hidden {
        position: absolute;
        
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        border: 0;
        overflow: hidden;

        clip: rect(0px 0px 0px 0px);
        clip: rect(0px, 0px, 0px, 0px);
        clip-path: inset(100%);

        white-space: nowrap;
        }

        Пишем разметку:
            <main>
            <section class="benefits">
                <h2 class="visually-hidden">Преимущества ЖК</h2>
                
                <div class="container container--sm">
                    <div class="benefits__row">
                        
                        <div class="benefits__item">
                            <img class="benefits__item-img" src="./img/benefits/parks.svg" alt="">
                            <p class="benefits__item-text">Рядом исторические
                                парки&nbsp;и&nbsp;скверы</p>
                        </div>
                        <div class="benefits__item">
                            <img class="benefits__item-img" src="./img/benefits/building.svg" alt="">
                            <p class="benefits__item-text">Полностью
                                обустроенный</p>
                        </div>
                        <div class="benefits__item">
                            <img class="benefits__item-img" src="./img/benefits/fountain.svg" alt="">
                            <p class="benefits__item-text">10 фонтанов
                                на территории</p>
                        </div>
                        <div class="benefits__item">
                            <img class="benefits__item-img" src="./img/benefits/bicycle.svg" alt="">
                            <p class="benefits__item-text">6 км <br>
                                велодорожек</p>
                        </div>

                    </div>
                </div>
            </section>
        </main>

        Создаем новый блок _benefits.scss, подключаем его в main.scss - @import './blocks/benefits';
        .benefits {
        padding: 120px 0;
        }

        .benefits__row {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
        }

        .benefits__item {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;

            &-img {
                margin-bottom: 53px;
            }
            
            &-text {
                text-align: center;
                font-size: 20px;
                line-height: 1.35;
                font-family: $font-secondary;
                font-weight: 300;
            }
        }






